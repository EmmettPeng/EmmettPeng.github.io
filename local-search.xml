<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Pandas: Pandas入门笔记(2023.11.2 / Updated)</title>
    <link href="/2023/11/01/pandas-base/"/>
    <url>/2023/11/01/pandas-base/</url>
    
    <content type="html"><![CDATA[<h1 id="Pandas入门笔记"><a href="#Pandas入门笔记" class="headerlink" title="Pandas入门笔记"></a>Pandas入门笔记</h1><p>从今天开始更新Pandas基础语法笔记，之前一直都是零零散散的用的，打算每天花一段时间系统记录一下pandas的基本语法。<br>主要参考了bilibili的up主<a href="https://space.bilibili.com/61036655">@蚂蚁学python</a>的视频<a href="https://www.bilibili.com/video/BV1Nq4y1Z7Q8?p=4&vd_source=708323e5553f1c0b8879d3d65a98b898">Python Pandas 数据分析，编程练习100例</a>和<a href="https://www.w3cschool.cn/hyspo/">W3Cschool的Pandas中文教程</a>。</p><h2 id="P1-From-list-to-series"><a href="#P1-From-list-to-series" class="headerlink" title="P1 From list to series"></a>P1 From list to series</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># From list to series / 由list构造pandas series</span><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><br>courses = [<span class="hljs-string">&quot;Chinese&quot;</span>, <span class="hljs-string">&quot;Math&quot;</span>, <span class="hljs-string">&quot;English&quot;</span>, <span class="hljs-string">&quot;Chemistry&quot;</span>]<br><span class="hljs-comment">#courses_series = pd.Series(data=courses)</span><br>courses_series = pd.Series(courses)<br><br><span class="hljs-built_in">print</span>(courses_series)<br></code></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(courses_series)<br><span class="hljs-number">0</span>      Chinese<br><span class="hljs-number">1</span>         Math<br><span class="hljs-number">2</span>      English<br><span class="hljs-number">3</span>    Chemistry<br>dtype: <span class="hljs-built_in">object</span><br><br><span class="hljs-comment"># 注意：index为默认的数字索引~</span><br></code></pre></td></tr></table></figure><h2 id="P2-From-dictionary-to-series"><a href="#P2-From-dictionary-to-series" class="headerlink" title="P2 From dictionary to series"></a>P2 From dictionary to series</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># From dictionary to series / 由dictionary构造pandas series</span><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><br>grades = &#123;<span class="hljs-string">&quot;Chinese&quot;</span>: <span class="hljs-number">92</span>, <span class="hljs-string">&quot;Math&quot;</span>: <span class="hljs-number">95</span>, <span class="hljs-string">&quot;English&quot;</span>: <span class="hljs-number">100</span>, <span class="hljs-string">&quot;Chemistry&quot;</span>: <span class="hljs-number">98</span>&#125;<br><span class="hljs-comment">#grades_series = pd.Series(data=grades)</span><br>grades_series = pd.Series(grades)<br><br><span class="hljs-built_in">print</span>(grades_series)<br></code></pre></td></tr></table></figure><p>输出：</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs axapta">&gt;&gt;&gt; <span class="hljs-keyword">print</span>(grades_series)<br>Chinese       <span class="hljs-number">92</span><br>Math          <span class="hljs-number">95</span><br>English      <span class="hljs-number">100</span><br>Chemistry     <span class="hljs-number">98</span><br>dtype: <span class="hljs-built_in">int64</span><br><br><span class="hljs-meta"># 注意：此时，字典中的键成为了索引，相应的值成为了Series的数据列。</span><br></code></pre></td></tr></table></figure><h2 id="P3-From-series-to-list-从series变回list"><a href="#P3-From-series-to-list-从series变回list" class="headerlink" title="P3 From series to list &#x2F; 从series变回list"></a>P3 From series to list &#x2F; 从series变回list</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># From series to list / 从series变回list</span><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><br>grades = &#123;<span class="hljs-string">&quot;Chinese&quot;</span>: <span class="hljs-number">92</span>, <span class="hljs-string">&quot;Math&quot;</span>: <span class="hljs-number">95</span>, <span class="hljs-string">&quot;English&quot;</span>: <span class="hljs-number">100</span>, <span class="hljs-string">&quot;Chemistry&quot;</span>: <span class="hljs-number">98</span>&#125;<br>grades_series = pd.Series(grades)<br><br>grades_original = grades_series.to_list()<br><span class="hljs-built_in">print</span>(grades_original)<br></code></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(grades_original)<br>[<span class="hljs-number">92</span>, <span class="hljs-number">95</span>, <span class="hljs-number">100</span>, <span class="hljs-number">98</span>]<br><br><span class="hljs-comment"># 仅保留了数据列（字典里的值）</span><br></code></pre></td></tr></table></figure><h2 id="P4-From-series-to-dataframe-从series转为dataframe"><a href="#P4-From-series-to-dataframe-从series转为dataframe" class="headerlink" title="P4 From series to dataframe &#x2F; 从series转为dataframe"></a>P4 From series to dataframe &#x2F; 从series转为dataframe</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># From series to dataframe / 从series变回dataframe</span><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><br>grades = &#123;<span class="hljs-string">&quot;Chinese&quot;</span>: <span class="hljs-number">92</span>, <span class="hljs-string">&quot;Math&quot;</span>: <span class="hljs-number">95</span>, <span class="hljs-string">&quot;English&quot;</span>: <span class="hljs-number">100</span>, <span class="hljs-string">&quot;Chemistry&quot;</span>: <span class="hljs-number">98</span>&#125;<br>grades_series = pd.Series(grades)<br><br>grades_df = pd.DataFrame(grades_series, columns=[<span class="hljs-string">&#x27;grade&#x27;</span>])<br><span class="hljs-built_in">print</span>(grades_df)<br></code></pre></td></tr></table></figure><p>输出：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs apache">           <span class="hljs-attribute">grade</span><br><span class="hljs-attribute">Chinese</span>       <span class="hljs-number">92</span><br><span class="hljs-attribute">Math</span>          <span class="hljs-number">95</span><br><span class="hljs-attribute">English</span>      <span class="hljs-number">100</span><br><span class="hljs-attribute">Chemistry</span>     <span class="hljs-number">98</span><br><br><span class="hljs-comment"># 列名是通过columns=[&#x27;grade&#x27;]手动加上的</span><br></code></pre></td></tr></table></figure><p>思考：如果这里需要把索引列的列名（比如<code>&#39;subject&#39;</code>）也加上：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">grades_df = grades_series.reset_index() <span class="hljs-comment"># 将列名转化为普通list</span><br>grades_df.columns = [<span class="hljs-string">&#x27;subject&#x27;</span>, <span class="hljs-string">&#x27;grade&#x27;</span>] <span class="hljs-comment"># 修改列名</span><br><br><span class="hljs-built_in">print</span>(grades_df)<br></code></pre></td></tr></table></figure><p>输出：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache">     <span class="hljs-attribute">subject</span>  grade<br><span class="hljs-attribute">0</span>    Chinese     <span class="hljs-number">92</span><br><span class="hljs-attribute">1</span>       Math     <span class="hljs-number">95</span><br><span class="hljs-attribute">2</span>    English    <span class="hljs-number">100</span><br><span class="hljs-attribute">3</span>  Chemistry     <span class="hljs-number">98</span><br></code></pre></td></tr></table></figure><h2 id="P5-Create-series-using-numpy"><a href="#P5-Create-series-using-numpy" class="headerlink" title="P5 Create series using numpy"></a>P5 Create series using numpy</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 创建一个长度为9的pandas series，要求索引为101-109，数据值为10-90，数据类型为float</span><br><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><br>s = pd.Series(<br>    np.arange(<span class="hljs-number">10</span>,<span class="hljs-number">100</span>,<span class="hljs-number">10</span>), <span class="hljs-comment"># 省略了data=, arange(start, stop, step)</span><br>    index=np.arange(<span class="hljs-number">101</span>,<span class="hljs-number">110</span>),<br>    dtype=<span class="hljs-string">&#x27;float&#x27;</span><br>)<br><br><span class="hljs-built_in">print</span>(s)<br></code></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(s)<br><span class="hljs-number">101</span>    <span class="hljs-number">10.0</span><br><span class="hljs-number">102</span>    <span class="hljs-number">20.0</span><br><span class="hljs-number">103</span>    <span class="hljs-number">30.0</span><br><span class="hljs-number">104</span>    <span class="hljs-number">40.0</span><br><span class="hljs-number">105</span>    <span class="hljs-number">50.0</span><br><span class="hljs-number">106</span>    <span class="hljs-number">60.0</span><br><span class="hljs-number">107</span>    <span class="hljs-number">70.0</span><br><span class="hljs-number">108</span>    <span class="hljs-number">80.0</span><br><span class="hljs-number">109</span>    <span class="hljs-number">90.0</span><br>dtype: float64<br></code></pre></td></tr></table></figure><h2 id="P6-Change-datatype-in-pandas-series"><a href="#P6-Change-datatype-in-pandas-series" class="headerlink" title="P6 Change datatype in pandas series"></a>P6 Change datatype in pandas series</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><br>s1 = pd.Series(<br>    data = [<span class="hljs-string">&quot;123&quot;</span>, <span class="hljs-string">&quot;456&quot;</span>, <span class="hljs-string">&quot;789&quot;</span>],<br>    index = <span class="hljs-built_in">list</span>(<span class="hljs-string">&#x27;abc&#x27;</span>)<br>)<br><br><span class="hljs-comment"># 要求将data列的string转化为整型数字int</span><br><br>s2 = s1.astype(<span class="hljs-built_in">int</span>)   <span class="hljs-comment">#也可以用s2 = s1.map(int)</span><br></code></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>s1<br>a    <span class="hljs-number">123</span><br>b    <span class="hljs-number">456</span><br>c    <span class="hljs-number">789</span><br>dtype: <span class="hljs-built_in">object</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>s2<br>a    <span class="hljs-number">123</span><br>b    <span class="hljs-number">456</span><br>c    <span class="hljs-number">789</span><br>dtype: int64 <span class="hljs-comment"># 数据类型已经从object转成了int64</span><br></code></pre></td></tr></table></figure><h2 id="P7-Append-elements-to-series"><a href="#P7-Append-elements-to-series" class="headerlink" title="P7 Append elements to series"></a>P7 Append elements to series</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><br>grades = &#123;<span class="hljs-string">&quot;Chinese&quot;</span>: <span class="hljs-number">92</span>, <span class="hljs-string">&quot;Math&quot;</span>: <span class="hljs-number">95</span>, <span class="hljs-string">&quot;English&quot;</span>: <span class="hljs-number">100</span>, <span class="hljs-string">&quot;Chemistry&quot;</span>: <span class="hljs-number">98</span>&#125;<br>grades_series = pd.Series(grades)<br><br><span class="hljs-comment">## 现在要再加两门课 Biology 和 Spanish 的成绩</span><br>new_grades_series = grades_series.append(<br>    pd.Series(&#123;<span class="hljs-string">&quot;Biology&quot;</span>: <span class="hljs-number">99</span>, <span class="hljs-string">&quot;Spanish&quot;</span>: <span class="hljs-number">96</span>&#125;)<br>)<br><span class="hljs-built_in">print</span>(new_grades_series)<br></code></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>new_grades_series = grades_series.append(<br><span class="hljs-meta">... </span>    pd.Series(&#123;<span class="hljs-string">&quot;Biology&quot;</span>: <span class="hljs-number">99</span>, <span class="hljs-string">&quot;Spanish&quot;</span>: <span class="hljs-number">96</span>&#125;)<br><span class="hljs-meta">... </span>)<br>&lt;stdin&gt;:<span class="hljs-number">1</span>: FutureWarning: The series.append method <span class="hljs-keyword">is</span> deprecated <span class="hljs-keyword">and</span> will be removed <span class="hljs-keyword">from</span> pandas <span class="hljs-keyword">in</span> a future version. Use pandas.concat instead.<br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(new_grades_series)<br>Chinese       <span class="hljs-number">92</span><br>Math          <span class="hljs-number">95</span><br>English      <span class="hljs-number">100</span><br>Chemistry     <span class="hljs-number">98</span><br>Biology       <span class="hljs-number">99</span><br>Spanish       <span class="hljs-number">96</span><br>dtype: int64<br><br><span class="hljs-comment"># 提出了警告，认为series.append功能过时，该功能确实可以通过series的concat函数完成。</span><br></code></pre></td></tr></table></figure><h2 id="P8-Reset-index"><a href="#P8-Reset-index" class="headerlink" title="P8 Reset_index"></a>P8 Reset_index</h2><p>See: <a href="#P4-From-series-to-dataframe-%E4%BB%8Eseries%E8%BD%AC%E4%B8%BAdataframe">P4 From series to dataframe &#x2F; 从series转为dataframe</a></p><h2 id="P9-From-dictionary-to-dataframe"><a href="#P9-From-dictionary-to-dataframe" class="headerlink" title="P9 From dictionary to dataframe"></a>P9 From dictionary to dataframe</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><br>df = pd.DataFrame(<br>    &#123;<br>        <span class="hljs-string">&quot;Abbr&quot;</span>: [<span class="hljs-string">&quot;A&quot;</span>, <span class="hljs-string">&quot;T&quot;</span>, <span class="hljs-string">&quot;C&quot;</span>, <span class="hljs-string">&quot;G&quot;</span>],<br>        <span class="hljs-string">&quot;Nucleotide&quot;</span>: [<span class="hljs-string">&quot;Adenine&quot;</span>, <span class="hljs-string">&quot;Thymine&quot;</span>, <span class="hljs-string">&quot;Guanine&quot;</span>, <span class="hljs-string">&quot;Cytosine&quot;</span>],<br>        <span class="hljs-string">&quot;Chinese Name&quot;</span>: [<span class="hljs-string">&quot;腺嘌呤&quot;</span>, <span class="hljs-string">&quot;胸腺嘧啶&quot;</span>, <span class="hljs-string">&quot;鸟嘌呤&quot;</span>, <span class="hljs-string">&quot;胞嘧啶&quot;</span>],<br>        <span class="hljs-string">&quot;Count&quot;</span>: [<span class="hljs-number">43442</span>,<span class="hljs-number">52452</span>,<span class="hljs-number">21342</span>,<span class="hljs-number">23323</span>]<br>    &#125;<br>)<br><span class="hljs-built_in">print</span>(df)<br></code></pre></td></tr></table></figure><p>输出：</p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs fortran">&gt;&gt;&gt; <span class="hljs-built_in">print</span>(df)<br>  Abbr Nucleotide Chinese <span class="hljs-keyword">Name</span>  <span class="hljs-built_in">Count</span><br><span class="hljs-number">0</span>    A    Adenine          腺嘌呤  <span class="hljs-number">43442</span><br><span class="hljs-number">1</span>    T    Thymine         胸腺嘧啶  <span class="hljs-number">52452</span><br><span class="hljs-number">2</span>    C    Guanine          鸟嘌呤  <span class="hljs-number">21342</span><br><span class="hljs-number">3</span>    G   Cytosine          胞嘧啶  <span class="hljs-number">23323</span><br></code></pre></td></tr></table></figure><h2 id="P10-Set-index-for-dataframe"><a href="#P10-Set-index-for-dataframe" class="headerlink" title="P10 Set index for dataframe"></a>P10 Set index for dataframe</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 上一题的索引列是数字索引，现在想默认使用Abbr作为索引</span><br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><br>df = pd.DataFrame(<br>    &#123;<br>        <span class="hljs-string">&quot;Abbr&quot;</span>: [<span class="hljs-string">&quot;A&quot;</span>, <span class="hljs-string">&quot;T&quot;</span>, <span class="hljs-string">&quot;C&quot;</span>, <span class="hljs-string">&quot;G&quot;</span>],<br>        <span class="hljs-string">&quot;Nucleotide&quot;</span>: [<span class="hljs-string">&quot;Adenine&quot;</span>, <span class="hljs-string">&quot;Thymine&quot;</span>, <span class="hljs-string">&quot;Guanine&quot;</span>, <span class="hljs-string">&quot;Cytosine&quot;</span>],<br>        <span class="hljs-string">&quot;Chinese Name&quot;</span>: [<span class="hljs-string">&quot;腺嘌呤&quot;</span>, <span class="hljs-string">&quot;胸腺嘧啶&quot;</span>, <span class="hljs-string">&quot;鸟嘌呤&quot;</span>, <span class="hljs-string">&quot;胞嘧啶&quot;</span>],<br>        <span class="hljs-string">&quot;Count&quot;</span>: [<span class="hljs-number">43442</span>,<span class="hljs-number">52452</span>,<span class="hljs-number">21342</span>,<span class="hljs-number">23323</span>]<br>    &#125;<br>)<br><br>df.set_index(<span class="hljs-string">&quot;Abbr&quot;</span>, inplace=<span class="hljs-literal">True</span>)<br><span class="hljs-built_in">print</span>(df)<br></code></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(df)<br>     Nucleotide Chinese Name  Count<br>Abbr                               <br>A       Adenine          腺嘌呤  <span class="hljs-number">43442</span><br>T       Thymine         胸腺嘧啶  <span class="hljs-number">52452</span><br>C       Guanine          鸟嘌呤  <span class="hljs-number">21342</span><br>G      Cytosine          胞嘧啶  <span class="hljs-number">23323</span><br><br><span class="hljs-comment"># 现在的索引列就是Abbr了</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>Pandas</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>给Galaxy注册增加强密码设置</title>
    <link href="/2023/10/26/%E7%BB%99Galaxy%E6%B3%A8%E5%86%8C%E5%A2%9E%E5%8A%A0%E5%BC%BA%E5%AF%86%E7%A0%81%E8%AE%BE%E7%BD%AE/"/>
    <url>/2023/10/26/%E7%BB%99Galaxy%E6%B3%A8%E5%86%8C%E5%A2%9E%E5%8A%A0%E5%BC%BA%E5%AF%86%E7%A0%81%E8%AE%BE%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="生物信息平台Galaxy：增强设置密码的强度要求"><a href="#生物信息平台Galaxy：增强设置密码的强度要求" class="headerlink" title="生物信息平台Galaxy：增强设置密码的强度要求"></a>生物信息平台Galaxy：增强设置密码的强度要求</h1><p>我们课题组的一些生物信息工具一般都利用<a href="https://galaxyproject.org/">Galaxy Platform</a>来放到网页上形成可交互界面。近期我们有一个需求，就是让新注册的用户必须使用强密码，比如&gt;8位字符，必须同时包含大写、小写字母、数字。</p><p>咨询了一下galaxy platform的团队人员，给出以下办法：</p><ol><li>找到<code>/path/to/galaxy/lib/galaxy/security/validate_user_input.py</code>文件，并找到这一块：</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Password validity parameters</span><br>PASSWORD_MIN_LEN = <span class="hljs-number">6</span><br><br><span class="hljs-comment"># Password rule: Must contain Uppercase letter, lowercase letter and number</span><br>VALID_PASSWORD_RE = re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">r&#x27;^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)&#x27;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">validate_email_str</span>(<span class="hljs-params">email</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;Validates a string containing an email address.&quot;&quot;&quot;</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> email:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;No email address was provided.&quot;</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span>(VALID_EMAIL_RE.<span class="hljs-keyword">match</span>(email)):<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;The format of the email address is not correct.&quot;</span><br>    <span class="hljs-keyword">elif</span> <span class="hljs-built_in">len</span>(email) &gt; EMAIL_MAX_LEN:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Email address cannot be more than %d characters in length.&quot;</span> % EMAIL_MAX_LEN<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&quot;</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">validate_password_str</span>(<span class="hljs-params">password</span>):<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> password <span class="hljs-keyword">or</span> <span class="hljs-built_in">len</span>(password) &lt; PASSWORD_MIN_LEN:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Use a password of at least %d characters.&quot;</span> % PASSWORD_MIN_LEN<br>    <span class="hljs-comment"># Password validation</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> VALID_PASSWORD_RE.<span class="hljs-keyword">match</span>(password):<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Password must contain at least one uppercase letter, one lowercase letter and one number.&quot;</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&quot;</span><br></code></pre></td></tr></table></figure><ol start="2"><li><p>修改<code>PASSWORD_MIN_LEN = 8</code>使得最小密码长度设置为8；</p></li><li><p>添加正则来要求字符种类：</p></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Password rule: Must contain Uppercase letter, lowercase letter and number</span><br>VALID_PASSWORD_RE = re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">r&#x27;^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)&#x27;</span>)<br></code></pre></td></tr></table></figure><ol start="4"><li>然后在<code>def validate_password_str(password):</code>函数里面增加一个<code>if</code>条件来识别密码是否满足正则：</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">validate_password_str</span>(<span class="hljs-params">password</span>):<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> password <span class="hljs-keyword">or</span> <span class="hljs-built_in">len</span>(password) &lt; PASSWORD_MIN_LEN:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Use a password of at least %d characters.&quot;</span> % PASSWORD_MIN_LEN<br>    <span class="hljs-comment"># Password validation</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> VALID_PASSWORD_RE.<span class="hljs-keyword">match</span>(password):<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Password must contain at least one uppercase letter, one lowercase letter and one number.&quot;</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&quot;</span><br></code></pre></td></tr></table></figure><ol start="5"><li>现在如果在注册时，使用不符合要求的简单密码，就会出现以下警告：</li></ol><p><img src="/img/%E7%BB%99Galaxy%E6%B3%A8%E5%86%8C%E5%A2%9E%E5%8A%A0%E5%BC%BA%E5%AF%86%E7%A0%81%E8%AE%BE%E7%BD%AE1.jpg" alt="错误提示"></p><h2 id="其他方案"><a href="#其他方案" class="headerlink" title="其他方案"></a>其他方案</h2><p>Galaxy团队人员还是推荐，如果真的要使用强密码或者mfa之类的设置，推荐使用external authentication的工具，如Keycloak，但是现在水平不够，还不会搞这些。鉴于上述的这种修改方式，在galaxy更新之后，很有可能会被覆盖掉，后面可能还需要再改，记录一下，以后查看。</p>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
      <category>Bioinformatics tool</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>nohup与循环</title>
    <link href="/2023/10/20/nohup%E4%B8%8E%E5%BE%AA%E7%8E%AF/"/>
    <url>/2023/10/20/nohup%E4%B8%8E%E5%BE%AA%E7%8E%AF/</url>
    
    <content type="html"><![CDATA[<h1 id="利用nohup和循环组合直接在后台运行循环任务"><a href="#利用nohup和循环组合直接在后台运行循环任务" class="headerlink" title="利用nohup和循环组合直接在后台运行循环任务"></a>利用nohup和循环组合直接在后台运行循环任务</h1><p>之前一直有个需求就是运行一些循环任务，包括对路径或者对文件的循环。之前为了用nohup挂在后台，一直都是写在sh文件里运行，但是文件一多就容易乱，并且<code>history</code>的时候也不太清晰。查阅了下资料，解决方案如下：</p><p><code>nohup sh -c &#39;for i in </code>seq 405<code>; do blastn -query /home/pengxi/mags_analysis/coassembly/metawrap_binning/refined_bins/MAG$&#123;i&#125;.fa -db hq_16S_db -out ./res/$&#123;i&#125;_res.txt -outfmt 6 -perc_identity 100;done&#39; &amp;</code></p>]]></content>
    
    
    <categories>
      
      <category>Linux/Shell</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Apache Log4j2远程代码执行漏洞（CNVD-2021-95914）补丁办法</title>
    <link href="/2021/12/14/Log4j2%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%EF%BC%88CNVD-2021-95914%EF%BC%89%E8%A1%A5%E4%B8%81%E5%8A%9E%E6%B3%95/"/>
    <url>/2021/12/14/Log4j2%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%EF%BC%88CNVD-2021-95914%EF%BC%89%E8%A1%A5%E4%B8%81%E5%8A%9E%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="Apache-Log4j2远程代码执行漏洞（CNVD-2021-95914）"><a href="#Apache-Log4j2远程代码执行漏洞（CNVD-2021-95914）" class="headerlink" title="Apache Log4j2远程代码执行漏洞（CNVD-2021-95914）"></a>Apache Log4j2远程代码执行漏洞（CNVD-2021-95914）</h1><p>收到网络中心老师发的邮件</p><blockquote><p>  2021年12月10日，国家信息安全漏洞共享平台（CNVD）收录了Apache Log4j2远程代码执行漏洞（CNVD-2021-95914）。攻击者利用该漏洞，可在未授权的情况下远程执行代码，获得目标服务器权限。目前，漏洞利用细节已公开，Apache官方已发布补丁修复该漏洞。CNVD建议受影响用户立即更新至最新版本，同时采取防范性措施避免漏洞攻击威胁。<br><a href="https://www.cert.org.cn/publish/main/8/2021/20211210110550958546708/20211210110550958546708_.html">https://www.cert.org.cn/publish/main/8/2021/20211210110550958546708/20211210110550958546708_.html</a>  </p></blockquote><p>服务器上有Apache服务，因此想办法修复补丁。在<a href="https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2">https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2</a>找到了源码，拿下来不会编译，百度搜了下，找到了一个好用的答案。</p><p><a href="https://zhuanlan.zhihu.com/p/444128036">好用的编译方法</a></p><h1 id="主要步骤"><a href="#主要步骤" class="headerlink" title="主要步骤"></a>主要步骤</h1><h3 id="安装apache-maven-3-6-3"><a href="#安装apache-maven-3-6-3" class="headerlink" title="安装apache-maven-3.6.3"></a>安装apache-maven-3.6.3</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd /opt<br>wget https://mirrors.ocf.berkeley.edu/apache/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz --no-check-certificate<br>mkdir /opt/maven<br>tar -zxvf apache-maven-3.6.3-bin.tar.gz -C /opt/maven<br></code></pre></td></tr></table></figure><h3 id="下载编译好的JDK"><a href="#下载编译好的JDK" class="headerlink" title="下载编译好的JDK"></a>下载编译好的JDK</h3><p>需要提前下载并解压JDK8, JDK9.0.4, JDK11.0.13</p><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><p>要用Java1.8的环境<br>用<code>vim /etc/profile</code> 编辑</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">export JAVAHOME=/opt/jdk1.8.0311<br>export MAVENHOME=/opt/maven/apache-maven-3.6.3<br>export CLASSPATH=.:$JAVAHOME/lib/dt.jar:$JAVAHOME/lib/tools.jar<br>export PATH=$PATH:$JAVAHOME/bin:$MAVEN_HOME/bin<br></code></pre></td></tr></table></figure><p>然后<code>source /etc/profile</code></p><h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget https://github.com/apache/logging-log4j2/archive/refs/tags/log4j-2.15.0-rc2.tar.gz<br>tar -xzvf log4j-2.15.0-rc2.tar.gz<br>cd /opt/logging-log4j2-log4j-2.15.0-rc2<br>mvn clean<br></code></pre></td></tr></table></figure><h3 id="编译报错解决"><a href="#编译报错解决" class="headerlink" title="编译报错解决"></a>编译报错解决</h3><h4 id="1-报-log4j-api-java9-错误"><a href="#1-报-log4j-api-java9-错误" class="headerlink" title="1. 报 log4j-api-java9 错误"></a>1. 报 log4j-api-java9 错误</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd log4j-api-java9<br>cp ../toolchains-sample-linux.xml ../toolchains-sample-linux-9.xml<br></code></pre></td></tr></table></figure><p><code>../toolchains-sample-linux-9.xml</code>这个文件内容改成：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">&lt;toolchain&gt;<br>    &lt;type&gt;jdk&lt;/type&gt;<br>    &lt;provides&gt;<br>      &lt;version&gt;9&lt;/version&gt;<br>      &lt;vendor&gt;sun&lt;/vendor&gt;<br>    &lt;/provides&gt;<br>    &lt;configuration&gt;<br>            &lt;jdkHome&gt;/opt/jdk-9.0.4&lt;/jdkHome&gt;<br>    &lt;/configuration&gt;<br>  &lt;/toolchain&gt;<br></code></pre></td></tr></table></figure><p>然后</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mvn clean install -t ../toolchains-sample-linux-9.xml<br></code></pre></td></tr></table></figure><p>然后，把这个文件cp到 <code>~/.m2/toolchains.xml</code></p><p>然后再退到<code>/opt/logging-log4j2-log4j-2.15.0-rc2</code>目录下，运行<br><code>mvn install -Dmaven.test.skip=true</code></p><h4 id="2-报log4j-perf错误"><a href="#2-报log4j-perf错误" class="headerlink" title="2. 报log4j-perf错误"></a>2. 报log4j-perf错误</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd log4j-perf<br>cp ../toolchains-sample-linux.xml ../toolchains-sample-linux-11.xml<br></code></pre></td></tr></table></figure><p><code>../toolchains-sample-linux-11.xml</code>这个文件内容改成：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">&lt;toolchain&gt;<br>    &lt;type&gt;jdk&lt;/type&gt;<br>    &lt;provides&gt;<br>      &lt;version&gt;11&lt;/version&gt;<br>      &lt;vendor&gt;sun&lt;/vendor&gt;<br>    &lt;/provides&gt;<br>    &lt;configuration&gt;<br>            &lt;jdkHome&gt;/opt/jdk-11.0.13&lt;/jdkHome&gt;<br>    &lt;/configuration&gt;<br>  &lt;/toolchain&gt;<br></code></pre></td></tr></table></figure><p>然后，</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mvn clean install -t ../toolchains-sample-linux-11.xml<br></code></pre></td></tr></table></figure><p>然后，把这个文件加到刚才改的 <code>~/.m2/toolchains.xml</code>后面</p><p>然后再退到<code>/opt/logging-log4j2-log4j-2.15.0-rc2</code>目录下，运行<br><code>mvn install -Dmaven.test.skip=true</code></p><p>整个编译应该就结束了。</p><h1 id="原文参考"><a href="#原文参考" class="headerlink" title="原文参考"></a>原文参考</h1><blockquote><p><a href="https://zhuanlan.zhihu.com/p/444128036">https://zhuanlan.zhihu.com/p/444128036</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Linux/Shell</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>sudo dpkg --configure -a卡在内核更新update-initramfs的解决方案（可能版）</title>
    <link href="/2021/02/22/%E8%A7%A3%E5%86%B3update-initramfs/"/>
    <url>/2021/02/22/%E8%A7%A3%E5%86%B3update-initramfs/</url>
    
    <content type="html"><![CDATA[<p>最近在处理数据的时候，需要安装一些新的软件。但是遇到了这样一个问题，纠结了很久查了很多地方，也不知道怎么能行。最关键的是自己不是很了解相关的知识，很多操作也不知道能不能做！</p><p>我用以下命令安装软件：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">sudo apt<span class="hljs-literal">-get</span> install XXXXX<br></code></pre></td></tr></table></figure><p>这个命令很普通，但是突然有一天它就报错，错误信息是：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">E: dpkg was interrupted, you must manually <span class="hljs-built_in">run</span> <span class="hljs-string">&#x27;sudo dpkg --configure -a&#x27;</span> <span class="hljs-keyword">to</span> correct the problem.<br></code></pre></td></tr></table></figure><p>那你说要输那我就输入了<code>sudo dpkg --configure -a</code>，然后提示：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">Setting</span> up initramfs-tools (<span class="hljs-number">0</span>.<span class="hljs-number">130</span>ubuntu3.<span class="hljs-number">11</span>) ...<br><span class="hljs-attribute">update</span>-initramfs: deferring update (trigger activated)<br><span class="hljs-attribute">Setting</span> up linux-image-<span class="hljs-number">4</span>.<span class="hljs-number">15</span>.<span class="hljs-number">0</span>-<span class="hljs-number">135</span>-generic (<span class="hljs-number">4</span>.<span class="hljs-number">15</span>.<span class="hljs-number">0</span>-<span class="hljs-number">135</span>.<span class="hljs-number">139</span>) ...<br><span class="hljs-attribute">Processing</span> triggers for ca-certificates (<span class="hljs-number">20210119</span>~<span class="hljs-number">18</span>.<span class="hljs-number">04</span>.<span class="hljs-number">1</span>) ...<br><span class="hljs-attribute">Updating</span> certificates in /etc/ssl/certs...<br><span class="hljs-attribute">0</span> added, <span class="hljs-number">0</span> removed; done.<br><span class="hljs-attribute">Running</span> hooks in /etc/ca-certificates/update.d...<br><br><span class="hljs-attribute">done</span>.<br><span class="hljs-attribute">done</span>.<br><span class="hljs-attribute">Processing</span> triggers for initramfs-tools (<span class="hljs-number">0</span>.<span class="hljs-number">130</span>ubuntu3.<span class="hljs-number">11</span>) ...<br><span class="hljs-attribute">update</span>-initramfs: Generating /boot/initrd.img-<span class="hljs-number">4</span>.<span class="hljs-number">15</span>.<span class="hljs-number">0</span>-<span class="hljs-number">132</span>-generic<br></code></pre></td></tr></table></figure><p>然后……它就一直卡在这里了……我最久就让他卡了24小时，发现他真的就是卡住了，然后在网上一查，这果然是个大家遇到过的问题。</p><p>之后，我用<code>sudo apt-get update</code>和<code>sudo apt-get upgrade</code>尝试更新的时候，他也会卡在这里。</p><p>然后我查看了一下当时的系统采用的是132号的kernel，但是135号kernel也在已安装内核列表里（通过<code>sudo dpkg --get-selections | grep linux-image</code>命令查看）。</p><p>反正之后折腾了，有的时候也会卡在135号内核的<code>update-initramfs</code>进程，就像这样：</p><p><code>update-initramfs: Generating /boot/initrd.img-4.15.0-135-generic</code>。</p><p>然后我今天重启的时候，突然发现进不去了系统了，提示信息是：</p><p><code>Kernel panic - not syncing: VFS: Unable to mount root fs on unknown-block (0,0)</code></p><p>好在找到一位大佬写的<a href="https://blog.csdn.net/qq_29936933/article/details/109216999">解决方案</a>，发现135号kernel无法进入系统，而132或者其他之前的kernel都可以，我就通过选择132号的kernel进入了系统，然后这个时候我再使用<code>sudo dpkg --configure -a</code>这条命令，发现居然不卡了，并且<code>apt-get install</code>的功能被恢复了！</p><p>然后我通过<code>sudo update-grub</code>命令更新了内核启动项的配置文件，使用<code>shutdown -r now</code>命令重启，发现自动通过135号内核进入了系统！</p><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs delphi">Welcome <span class="hljs-keyword">to</span> Ubuntu <span class="hljs-number">18.04</span>.<span class="hljs-number">5</span> LTS (GNU/Linux <span class="hljs-number">4.15</span>.<span class="hljs-number">0</span>-<span class="hljs-number">135</span>-<span class="hljs-keyword">generic</span> x86_64)<br><br> * Documentation:  https:<span class="hljs-comment">//help.ubuntu.com</span><br> * Management:     https:<span class="hljs-comment">//landscape.canonical.com</span><br> * Support:        https:<span class="hljs-comment">//ubuntu.com/advantage</span><br><br>  System information <span class="hljs-keyword">as</span> <span class="hljs-keyword">of</span> Mon Feb <span class="hljs-number">22</span> <span class="hljs-number">10</span>:<span class="hljs-number">14</span>:<span class="hljs-number">35</span> UTC <span class="hljs-number">2021</span><br></code></pre></td></tr></table></figure><p>而且之前的这一系列问题全部都正常了！</p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>说实话，我也不太清楚发生了肾么事，反正挺神奇的。我挺期待有大神明白其中原理的可以解释一下，说不定其他遇到这种问题的同学也可以尝试着进旧内核里去更新新内核！这个方法我觉得还是比较安全的。</p><p>以防以后还有这种问题，今天把这个学习笔记写在这里，一是等待高人指点，二是防止以后忘记怎么操作~！</p>]]></content>
    
    
    <categories>
      
      <category>Linux/Shell</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
